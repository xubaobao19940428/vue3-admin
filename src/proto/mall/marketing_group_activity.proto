//DESC APP littlec-marketing
syntax = "proto3";
package boss.market;

import "common/base.proto";
import "common/errcode.proto";
import "common/enum.proto";


option java_multiple_files = true;
option java_package = "com.fingo.littlec.proto.mall.market";
option java_outer_classname = "MarketingGroupActivityBossMall";

//-------------拼团开始--------------------
//拼团列表
message GroupAcivityQueryParamReq {
  common.base.Pagination page = 1;
  string subject_serial_id = 2; //专题序号id
}
//今日推荐
message GroupActivityRecommendParamReq {

}
//拼团商品列表展示
message GroupActivitySampleInfoVo {
  string id = 1; //主键
  string product_img = 2; //商品图片
  string product_name = 3; //商品名称
  string activity_price = 4; //活动价
  string price = 5; //原价
  string serial_id = 6; //序号Id
  string product_id = 7; //商品id
  int32 group_buy_num = 8; //拼团人数
  int32 num = 9; //成团人数
  int32 totalSale = 10; //商品总销量
}
//拼团商品参数
message GroupActivityItemReq {
  string serial_id = 1; //序号id
}
//拼团商品列表
message GroupActivityListResp {
  repeated GroupActivitySampleInfoVo groupActivitySampleInfoVo = 1; //商品列表
  int32 total = 2; //总数
  common.base.ErrorMessage ret = 3;

}
message GroupActivityListByNewComerIndexResp {
  string subject_serial_id = 1; //专题serialId
  string title = 2; //专题名
  repeated GroupActivitySampleInfoVo groupActivitySampleInfoVo = 3; //商品列表
  int32 total = 4; //总数
  common.base.ErrorMessage ret = 5;
  bool is_last_page = 6;

}
//专题列表参数
message SubjectReq {
  string country_code = 1;
}
message SubjectVo {
  string serial_id = 1; //专题序号id
  string name = 2; //专题名称
}
//专题列表
message SubjectResp {
  repeated SubjectVo subjectVo = 1;
  common.base.ErrorMessage ret = 2;
}
message GroupActivityProductSkuVo {
  string sku_img = 1; //sku图片
  string sku_activity_price = 2; //sku活动价格
  string sku_activity_stock = 3; //sku活动库存
  string commission = 4; //佣金积分
  string sku_id = 6; //skuid
  string sku_code = 7; //skucode
}

//拼团商品详情,其余信息从商品详情接口中取
message GroupActivityProductInfoResp {
  string head_img = 1; //用户头像
  string nick_name = 2; //昵称
  int32 group_num = 3; //成团人数
  string activity_price = 4; //活动价
  string end_time = 5; //拼团结束时间
  string commission = 6; //佣金积分
  string product_id = 7; //商品id
  string serial_id = 8; //序号id
  repeated GroupActivityProductSkuVo groupActivityProductSkuVo = 9; //sku列表
  common.base.ErrorMessage ret = 10;
  string leader_discount = 11; //团长折扣
  string follow_discount = 12; //团员折扣
  common.enum.MarketingEnum.GroupActivityType group_activity_type = 13; //拼团类型
  int32 num_of_winners = 14;//中奖人数
  int32 num_of_new_users = 15;//新用户人数
  int32 num_of_lucky = 20;//中奖人数
  common.enum.MarketingEnum.GroupActivityByItemType group_activity_item_type = 16;//拼团商品的活动类型,1:普通拼团，2:抽奖团
  common.enum.MarketingEnum.RefundType refund_type = 19; //退款类型
}

message Empty {

}

message MallStatusResp {
  int32 status = 1;
  string url = 2;
  common.base.ErrorMessage ret = 3;
  string msg = 4;
}



message OneBuyerListReq {
  common.base.Pagination page = 1;
}
message GroupByFiveListReq {
  common.base.Pagination page = 1;
}
//message GroupActivityPb{
//    repeated GroupActivitySampleInfoVo groupActivitySampleInfoVo = 1; //商品列表
//    string title = 2; //专题名
//    string subject_serial_id = 3; //专题serialId
//    common.enum.MarketingEnum.GroupActivityType group_activity_type = 4; //拼团类型
//}
//message NewcomerListResp {
//    repeated GroupActivityPb groupActivityPb = 1;
//    common.base.ErrorMessage ret = 2;
//}
message HorseRaceLampListReq{
  int32 size = 1;//请求的大小，一般50就行，最多不能超过200
}

message HorseRaceLampListResp{
  common.base.ErrorMessage ret = 1;
  repeated string hrl_text = 2;//跑马灯信息
}

message GetGroupSpuMallReq {
  repeated string subject_serial_id = 1;//专题id
  repeated string group_item_serial_id = 2;//拼团商品序列号
  string country_code = 3; //页面搭建所属国家
  repeated int32 product_status = 4; // 1-未开始，2-进行中，3-已结束，有几个状态就传几个值
}


message GetRandomProductReq{
  int32 size = 1;//需要商品数量
}

message GetRandomProductFilterReq{
  int32 size = 1;//需要商品数量
  string product_id = 2;//商品ID
}

message  ActiveGroupProductInfo{
  string product_id = 1; //商品ID
  string product_img = 2; //商品图片
  string product_name = 3; //商品名称
  string activity_price = 4; //活动价
  string price = 5; //原价
  string savePrize = 6; //省钱
}

message GetRandomProductResp{
  repeated ActiveGroupProductInfo productInfo = 1;
  string url = 2;
  string title = 3;
  string subTitle = 4;
  common.base.ErrorMessage ret = 5;
}

message GetRandomProductFilterResp{
  repeated ActiveGroupProductInfo productInfo = 1;
  string url = 2;
  common.base.ErrorMessage ret = 3;
}


message GetGroupSpuMallResp {
  message GroupProductDetailUnit {
    string group_item_serial_id = 11;//拼团商品序列号
    string spu_id = 10;//商品id
    string group_spu_title = 1;//商品title
    string group_spu_cover = 2;//商品缩略图
    string group_subject_name = 3;//专题
    string group_spu_start_time = 4;//拼团商品开始时间
    string group_spu_end_time = 5;//拼团商品结束时间
    string group_spu_activity_price = 6;//拼团spu最低拼团价
    string group_spu_price = 7;//划线价
    string group_spu_price_vip = 8;//vip价格
    int32 num = 9;//成团人数
  }
  repeated GroupProductDetailUnit group_product_detail_unit = 1;
  common.base.ErrorMessage ret = 2;
}

service GroupActivityMallService {
  //推荐商品列表
  rpc GroupActivityRecommendList (GroupActivityRecommendParamReq) returns (GroupActivityListResp);
  //拼团商品列表
  rpc GroupActivityList (GroupAcivityQueryParamReq) returns (GroupActivityListResp);
  //专题列表
  rpc GroupActivitySubjectList (Empty) returns (SubjectResp);
  //拼团商品详情
  rpc ProductInfo (GroupActivityItemReq) returns (GroupActivityProductInfoResp);
  //    //新人页团购
  //    rpc NewcomerList(Empty) returns (NewcomerListResp);
  //一元购
  rpc OneBuyerList (OneBuyerListReq) returns (GroupActivityListByNewComerIndexResp);
  //五人团
  rpc GroupByFiveList (GroupByFiveListReq) returns (GroupActivityListByNewComerIndexResp);
  //拼团跑马灯
  rpc HorseRaceLampList(HorseRaceLampListReq) returns (HorseRaceLampListResp);
  //随机获取n个拼团商品
  rpc GetRandomProduct(GetRandomProductReq) returns (GetRandomProductResp);
  //随机获取n个拼团商品，过滤掉当前商品信息
  rpc GetRandomProductFilter(GetRandomProductFilterReq) returns (GetRandomProductFilterResp);
}

service GroupActivitySubjectStatusMallService {
  //查询状态
  rpc Check (Empty) returns (MallStatusResp);
  //    //更新状态
  //    rpc Update (Empty) returns (MallSuccessResp);
}

service GroupActivityForPageMallService {
  //根据拼团商品id或者拼团专题id集合搜索拼团商品详细信息
  rpc GetGroupSpuMall (GetGroupSpuMallReq) returns (GetGroupSpuMallResp);
}

//-------------拼团结束--------------------